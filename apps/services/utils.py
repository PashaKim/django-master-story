import random


def random_from_dict(choices_dict):
    choice = random.choice(list(choices_dict))
    return {'title': choice, 'description': choices_dict[choice]}


class Pantheon:
    GOD_LIST = [
        {'name': 'Авандра',
         'description': 'богиня случая и удачи',
         'alignment': 'ХД',
         'domain': 'Обман',
         'symbol': 'Три сложенные волнистые линии'},
        {'name': 'Королева Воронов',
         'description': 'богиня смерти',
         'alignment': 'ЗН',
         'domain': ['Жизнь', 'Смерть'],
         'symbol': 'Голова ворона в профиль, повёрнута влево'}
    ]

    def gods_set(self, ):
        return random.sample(self.GOD_LIST, random.randrange(1, len(self.GOD_LIST) + 1, 1))


class World:
    city_part_dict = {'starting': ['Ки', 'Ха', 'Те', 'Че', 'Ро', 'Жи', 'Д', 'Ме'],
                      'middle': ['', 'р', 'рьк', 'рноп', 'ркасс', 'рниг', 'вн', 'том'],
                      'ending': ['', 'ев', 'ов', 'оль', 'ы', 'о', 'ир', 'од'], }

    assumptions_dict = {'Боги наблюдают за миром.': '''Боги реальны, и олицетворены в различных верованиях, где каждый бог 
                   претендует на власть над определённым аспектом мира, таким как война, леса или реки. Боги оказывают 
                   влияние на мир, даруя божественную магии своим последователям и посылая сигналы и предзнаменования, 
                   направляющие их. Последователь бога служит как его агент в мире. Агент следует идеалам своего бога и
                    уничтожает его соперников. Некоторые могут отказаться от поклонения богам, но никто не может отрицать
                     их существования.''',
                        'Большая часть мира — дикая местность.': '''Дикая местность повсюду. Города, конфедерации и королевства
                    различных размеров усеивают мир, но вокруг их границ нетронутые пространства. Люди хорошо знают то 
                    место, в котором они живут. Они слышали истории о других местах от торговцев и путешественников, но 
                    никто не знает, что находится за горами или в глуши великого леса до тех пор, пока не побывали там.''',
                        'Это древний мир.': '''Империи появляются и исчезают, и мест, нетронутых их величием или разрухой, 
                         остаётся всё меньше и меньше. Война, время и естественные причины влияют на мир смертных, оставляя его
                          наполненным местами приключений и загадок. Древние цивилизации и их знания сохранились в легендах,
                           магических предметах и в развалинах. Хаос и зло часто сопровождает закат империи.'''}
    place_dict = {
        'Деревня': {
            'Население:': 1000,
            'Правительство:': '''Титулованная персона (как правило, не проживающая в поселении) правит деревней, с 
                    назначенным агентом (надсмотрщиком, проживающим в деревне) для разрешения споров и сбора налогов.''',
            'Оборона:': ''' При надсмотрщике может быть небольшой отряд солдат. В противном случае деревня 
                    полагается на гражданское ополчение.''',
            'Торговля:': '''Основные товары доступны в гостиницах и торговых постах. Другие товары поступают от
                     странствующих торговцев.''',
            'Организации:': '''Деревня может содержать один или два храма или святыни, но других организаций мало или нет 
                    совсем.'''
        },
        'Город': {
            'Население:': 6000,
            'Правительство:': '''Местная знать управляет городом и назначает бургомистра, чтобы надзирать за 
                             администрацией. Избранный городской совет представляет интересы среднего класса.''',
            'Оборона:': ''' Знать командует армией профессиональных солдат, а также личными телохранителями.''',
            'Торговля:': '''Основные товары легкодоступны, а экзотические товары и услуги найти труднее. Путников 
                        обслуживают постоялые дворы и таверны.''',
            'Организации:': '''Город содержит несколько храмов, а также различные торговые гильдии и другие 
                            организации.'''
        }
    }

    def assumptions(self):
        return random_from_dict(self.assumptions_dict)

    def place_of_adventure(self):
        return random_from_dict(self.place_dict)

    def city_name(self):
        return '{}{}{}'.format(random.choice(self.city_part_dict['starting']),
                               random.choice(self.city_part_dict['middle']),
                               random.choice(self.city_part_dict['ending']))
